name: Validate SQL on Pull Request

on:
  pull_request:
    paths:
      - 'sql_file/**/*.sql'

jobs:
  validate-sql:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # fetch full history for git diff to work properly

      - name: Install PostgreSQL client
        run: sudo apt-get install -y postgresql-client

      - name: Detect and Run Changed SQL Files
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: |
          set -e
          export PGPASSWORD=$DB_PASSWORD

          echo "Fetching main branch for comparison..."
          git fetch origin main || echo "main branch not available yet (new branch?)"

          if git show-ref --quiet refs/remotes/origin/main; then
            DIFF_TARGET="origin/main"
          else
            DIFF_TARGET="HEAD~1"
          fi

          echo "Comparing changes against $DIFF_TARGET"

          # Find changed SQL files inside sql_file/
          CHANGED_FILES=$(git diff --name-only "$DIFF_TARGET" -- sql_file/ | grep '.sql$' || true)

          if [ -z "$CHANGED_FILES" ]; then
            echo "✅ No SQL files changed. Skipping SQL execution."
            exit 0
          fi

          echo "Changed SQL files:"
          echo "$CHANGED_FILES"

          for file in $CHANGED_FILES; do
            echo "▶️ Running $file..."
            psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" -f "$file"
          done
